{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HeaderComponent = class HeaderComponent {\n  constructor(sharedService, router) {\n    this.sharedService = sharedService;\n    this.router = router;\n    this.selectedOption = 'day';\n    this.currentMonth = this.sharedService.currentMonth;\n  }\n  callPreviousMonthFromHeader() {\n    this.sharedService.previousMonth();\n  }\n  callNextMonthFromHeader() {\n    this.sharedService.nextMonth();\n  }\n  callSwitchToMonthFromHeader() {\n    this.sharedService.switchToMonthView();\n  }\n  callSwitchToDayFromHeader() {\n    this.sharedService.switchToDayView();\n  }\n  callSwitchToYearFromHeader() {\n    this.sharedService.switchToYearView();\n  }\n  callSwitchToWeekFromHeader() {\n    this.sharedService.switchToWeekView();\n  }\n  onSelectChange() {\n    if (this.selectedOption === 'day') {\n      this.callSwitchToDayFromHeader();\n      this.router.navigate([this.selectedOption]);\n      console.log('day');\n    } else if (this.selectedOption === 'week') {\n      this.callSwitchToWeekFromHeader();\n      this.router.navigate([this.selectedOption]);\n      console.log('week');\n    } else if (this.selectedOption === 'month') {\n      this.callSwitchToMonthFromHeader();\n      this.router.navigate([this.selectedOption]);\n      console.log('month');\n    } else if (this.selectedOption === 'year') {\n      this.callSwitchToYearFromHeader();\n      this.router.navigate([this.selectedOption]);\n      console.log('year');\n    }\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);","map":{"version":3,"names":["Component","HeaderComponent","constructor","sharedService","router","selectedOption","currentMonth","callPreviousMonthFromHeader","previousMonth","callNextMonthFromHeader","nextMonth","callSwitchToMonthFromHeader","switchToMonthView","callSwitchToDayFromHeader","switchToDayView","callSwitchToYearFromHeader","switchToYearView","callSwitchToWeekFromHeader","switchToWeekView","onSelectChange","navigate","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/Melina_1/Documents/GitHub/Calendar/src/app/header/header.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SharedService } from '../shared.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  selectedOption: string = 'day'; \n\n  constructor(private sharedService: SharedService, private router: Router) {}\n\n  currentMonth = this.sharedService.currentMonth;\n\n  callPreviousMonthFromHeader() {\n    this.sharedService.previousMonth();\n  }\n  callNextMonthFromHeader() {\n    this.sharedService.nextMonth();\n  }\n  callSwitchToMonthFromHeader() {\n    this.sharedService.switchToMonthView();\n  }\n  callSwitchToDayFromHeader() {\n    this.sharedService.switchToDayView();\n  }\n  callSwitchToYearFromHeader() {\n    this.sharedService.switchToYearView();\n  }\n  callSwitchToWeekFromHeader() {\n    this.sharedService.switchToWeekView();\n  }\n\n\n  onSelectChange(){\n\n    if (this.selectedOption === 'day') {\n      this.callSwitchToDayFromHeader();\n      this.router.navigate([this.selectedOption])\n      console.log('day')\n    } else if (this.selectedOption === 'week') {\n      this.callSwitchToWeekFromHeader();\n      this.router.navigate([this.selectedOption])\n      console.log('week')\n    } else if (this.selectedOption === 'month') {\n      this.callSwitchToMonthFromHeader();\n      this.router.navigate([this.selectedOption])\n      console.log('month')\n    } else if (this.selectedOption === 'year') {\n      this.callSwitchToYearFromHeader();\n      this.router.navigate([this.selectedOption])\n      console.log('year')\n    } \n\n  }\n  \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,aAA4B,EAAUC,MAAc;IAApD,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAFhE,KAAAC,cAAc,GAAW,KAAK;IAI9B,KAAAC,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,YAAY;EAF6B;EAI3EC,2BAA2BA,CAAA;IACzB,IAAI,CAACJ,aAAa,CAACK,aAAa,EAAE;EACpC;EACAC,uBAAuBA,CAAA;IACrB,IAAI,CAACN,aAAa,CAACO,SAAS,EAAE;EAChC;EACAC,2BAA2BA,CAAA;IACzB,IAAI,CAACR,aAAa,CAACS,iBAAiB,EAAE;EACxC;EACAC,yBAAyBA,CAAA;IACvB,IAAI,CAACV,aAAa,CAACW,eAAe,EAAE;EACtC;EACAC,0BAA0BA,CAAA;IACxB,IAAI,CAACZ,aAAa,CAACa,gBAAgB,EAAE;EACvC;EACAC,0BAA0BA,CAAA;IACxB,IAAI,CAACd,aAAa,CAACe,gBAAgB,EAAE;EACvC;EAGAC,cAAcA,CAAA;IAEZ,IAAI,IAAI,CAACd,cAAc,KAAK,KAAK,EAAE;MACjC,IAAI,CAACQ,yBAAyB,EAAE;MAChC,IAAI,CAACT,MAAM,CAACgB,QAAQ,CAAC,CAAC,IAAI,CAACf,cAAc,CAAC,CAAC;MAC3CgB,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;KACnB,MAAM,IAAI,IAAI,CAACjB,cAAc,KAAK,MAAM,EAAE;MACzC,IAAI,CAACY,0BAA0B,EAAE;MACjC,IAAI,CAACb,MAAM,CAACgB,QAAQ,CAAC,CAAC,IAAI,CAACf,cAAc,CAAC,CAAC;MAC3CgB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;KACpB,MAAM,IAAI,IAAI,CAACjB,cAAc,KAAK,OAAO,EAAE;MAC1C,IAAI,CAACM,2BAA2B,EAAE;MAClC,IAAI,CAACP,MAAM,CAACgB,QAAQ,CAAC,CAAC,IAAI,CAACf,cAAc,CAAC,CAAC;MAC3CgB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;KACrB,MAAM,IAAI,IAAI,CAACjB,cAAc,KAAK,MAAM,EAAE;MACzC,IAAI,CAACU,0BAA0B,EAAE;MACjC,IAAI,CAACX,MAAM,CAACgB,QAAQ,CAAC,CAAC,IAAI,CAACf,cAAc,CAAC,CAAC;MAC3CgB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;;EAGvB;CAGD;AAnDYrB,eAAe,GAAAsB,UAAA,EAL3BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWzB,eAAe,CAmD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}