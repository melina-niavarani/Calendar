{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class SharedService {\n  constructor() {\n    this.currentMonth = new Date();\n    this.currentView = 'month';\n    this.daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.weeks = [];\n    this.currentYear = '';\n    this.generateCalendar();\n  }\n  // ------- Switch To Week View ------- //\n  switchToWeekView() {\n    this.currentView = 'week';\n  }\n  // ------- Switch To Month View ------- //\n  switchToMonthView() {\n    this.currentView = 'month';\n  }\n  // ------- Switch To Day View ------- //\n  switchToDayView() {\n    this.currentView = 'day';\n  }\n  // ------- Switch To Year View ------- //\n  switchToYearView() {\n    this.currentView = 'year';\n  }\n  generateCalendar() {\n    if (this.currentView === 'month') {\n      const startDate = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth(), 1);\n      const endDate = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1, 0);\n      const numDays = endDate.getDate();\n      const startDay = startDate.getDay();\n      const weeks = [];\n      let currentWeek = [];\n      for (let i = 0; i < startDay; i++) {\n        currentWeek.push({\n          day: ''\n        });\n      }\n      for (let day = 1; day <= numDays; day++) {\n        currentWeek.push({\n          day\n        });\n        if (currentWeek.length === 7) {\n          weeks.push(currentWeek);\n          currentWeek = [];\n        }\n      }\n      if (currentWeek.length > 0) {\n        weeks.push(currentWeek);\n      }\n      this.weeks = weeks;\n    } else if (this.currentView === 'week') {\n      const startDate = new Date(this.currentMonth);\n      startDate.setDate(startDate.getDate() - startDate.getDay()); // Start from the first day of the week\n      const endDate = new Date(startDate);\n      endDate.setDate(startDate.getDate() + 6); // End on the last day of the week\n      const calendar = [];\n      let currentWeek = [];\n      let currentDate = new Date(startDate);\n      while (currentDate <= endDate) {\n        currentWeek.push({\n          day: currentDate.getDate(),\n          date: new Date(currentDate),\n          events: [] // You can populate this with events for the day\n        });\n\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      calendar.push(currentWeek);\n      this.weeks = calendar;\n    } else if (this.currentView === 'day') {\n      const currentDate = new Date();\n      this.weeks = [[{\n        day: currentDate.getDate(),\n        events: []\n      }]];\n    }\n  }\n  previousMonth() {\n    this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() - 1, 1);\n    this.generateCalendar();\n  }\n  nextMonth() {\n    this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1, 1);\n    this.generateCalendar();\n  }\n  previousYear() {\n    this.currentYear = new Date(this.currentMonth.getFullYear() + 1);\n  }\n  nextYear() {\n    this.currentYear = new Date(this.currentMonth.getFullYear() + 1);\n  }\n}\n_class = SharedService;\n_class.ɵfac = function SharedService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SharedService","constructor","currentMonth","Date","currentView","daysOfWeek","weeks","currentYear","generateCalendar","switchToWeekView","switchToMonthView","switchToDayView","switchToYearView","startDate","getFullYear","getMonth","endDate","numDays","getDate","startDay","getDay","currentWeek","i","push","day","length","setDate","calendar","currentDate","date","events","previousMonth","nextMonth","previousYear","nextYear","factory","ɵfac","providedIn"],"sources":["/Users/Melina_1/Documents/GitHub/Calendar/src/app/shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class SharedService {\n\n  currentMonth = new Date();\n  currentView = 'month'\n  daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  weeks: any[] = [];\n\n  constructor() {\n    this.generateCalendar();\n  }\n\n  // ------- Switch To Week View ------- //\n  switchToWeekView() {\n    this.currentView = 'week';\n  }\n\n// ------- Switch To Month View ------- //\n  switchToMonthView() {\n  this.currentView = 'month';\n  }\n\n  // ------- Switch To Day View ------- //\n  switchToDayView() {\n    this.currentView = 'day';\n  }\n\n  // ------- Switch To Year View ------- //\n  switchToYearView() {\n    this.currentView = 'year';\n  }\n\n  generateCalendar() {\n    if (this.currentView === 'month' ) {\n      const startDate = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth(), 1);\n      const endDate = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1, 0);\n      const numDays = endDate.getDate();\n      const startDay = startDate.getDay();\n  \n      const weeks: any[] = [];\n      let currentWeek: any[] = [];\n  \n      for (let i = 0; i < startDay; i++) {\n        currentWeek.push({ day: '' });\n      }\n  \n      for (let day = 1; day <= numDays; day++) {\n        currentWeek.push({ day });\n        if (currentWeek.length === 7) {\n          weeks.push(currentWeek);\n          currentWeek = [];\n        }\n      }\n  \n      if (currentWeek.length > 0) {\n        weeks.push(currentWeek);\n      }\n  \n      this.weeks = weeks;\n    }else if (this.currentView === 'week') {\n      const startDate = new Date(this.currentMonth);\n      startDate.setDate(startDate.getDate() - startDate.getDay()); // Start from the first day of the week\n  \n      const endDate = new Date(startDate);\n      endDate.setDate(startDate.getDate() + 6); // End on the last day of the week\n  \n      const calendar: any[] = [];\n      let currentWeek: any[] = [];\n  \n      let currentDate = new Date(startDate);\n  \n      while (currentDate <= endDate) {\n        currentWeek.push({\n          day: currentDate.getDate(),\n          date: new Date(currentDate),\n          events: [] // You can populate this with events for the day\n        });\n  \n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n  \n      calendar.push(currentWeek);\n  \n      this.weeks = calendar;\n      \n    }else if (this.currentView === 'day') {\n\n      const currentDate = new Date();\n      this.weeks = [[{ day: currentDate.getDate(), events: [] }]];\n\n    }\n    \n  }\n  previousMonth() {\n    this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() - 1, 1);\n    this.generateCalendar();\n  }\n\n  nextMonth() {\n    this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1, 1);\n    this.generateCalendar();\n  }\n\n  currentYear: any = '';\n  previousYear() {\n    this.currentYear = new Date(this.currentMonth.getFullYear() + 1);\n    \n  }\n\n  nextYear() {\n    this.currentYear = new Date(this.currentMonth.getFullYear() + 1);\n\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}