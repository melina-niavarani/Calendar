{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CalendarComponent = class CalendarComponent {\n  constructor(rendererFactory, sharedService, appointmentsService) {\n    this.rendererFactory = rendererFactory;\n    this.sharedService = sharedService;\n    this.appointmentsService = appointmentsService;\n    this.selectedDate = new Date();\n    // === Appointment form condition === //\n    this.showAppointmentForm = this.appointmentsService.showAppointmentForm;\n    this.appointmentDate = null;\n    this.selectedAppointment = null;\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n  onAddAppointment(appointment) {\n    if (!appointment.title) {\n      appointment.title = 'Unknown Title';\n    }\n    if (this.appointmentDate) {\n      appointment.date = this.appointmentDate;\n      this.selectedAppointment = appointment;\n    }\n    this.showAppointmentForm = false;\n  }\n  onCloseForm() {\n    this.showAppointmentForm = false;\n  }\n  // ----------- DAY CHANGE -------------//\n  dateChanged(event) {\n    console.log(\"Date changed\", event);\n  }\n  // ----------- MONTH CHANGE -------------//\n  ngAfterViewInit() {\n    const monthPrevBtn = document.querySelectorAll('.mat-calendar-previous-button');\n    const monthNextBtn = document.querySelectorAll('.mat-calendar-next-button');\n    if (monthPrevBtn) {\n      Array.from(monthPrevBtn).forEach(button => {\n        this.renderer.listen(button, 'click', event => {});\n      });\n    }\n    if (monthNextBtn) {\n      Array.from(monthNextBtn).forEach(button => {\n        this.renderer.listen(button, 'click', event => {});\n      });\n    }\n  }\n  handleMonthSelected(event) {\n    console.log(\"Month changed\", event);\n  }\n  // ---------YEAR CHANGE ----------//\n  handleYearSelected(event) {\n    console.log(\"Year changed\", event);\n  }\n};\nCalendarComponent = __decorate([Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})], CalendarComponent);","map":{"version":3,"names":["Component","CalendarComponent","constructor","rendererFactory","sharedService","appointmentsService","selectedDate","Date","showAppointmentForm","appointmentDate","selectedAppointment","renderer","createRenderer","onAddAppointment","appointment","title","date","onCloseForm","dateChanged","event","console","log","ngAfterViewInit","monthPrevBtn","document","querySelectorAll","monthNextBtn","Array","from","forEach","button","listen","handleMonthSelected","handleYearSelected","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/Melina_1/Documents/GitHub/Calendar/src/app/calendar/calendar.component.ts"],"sourcesContent":["import { Component, Renderer2, RendererFactory2 } from '@angular/core';\nimport { SharedService } from '../shared.service';\nimport { AppointmentsService } from '../appointment.service';\nimport { Appointment  } from \"../appointment.model\";\n\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\n\nexport class CalendarComponent {\n[x: string]: any;\n  selectedDate: Date = new Date();\n  private renderer: Renderer2;\n\n  constructor(private rendererFactory: RendererFactory2, public sharedService: SharedService, private appointmentsService: AppointmentsService) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n    // === Appointment form condition === //\n    showAppointmentForm = this.appointmentsService.showAppointmentForm;\n\n    appointmentDate: string | null = null;\n    selectedAppointment: Appointment | null = null;\n    \n\n    onAddAppointment(appointment: Appointment) {\n      if (!appointment.title) {\n        appointment.title = 'Unknown Title'; \n      }\n      if (this.appointmentDate) {\n        appointment.date = this.appointmentDate;\n        this.selectedAppointment = appointment;\n      }\n      this.showAppointmentForm = false;\n    }\n\n    onCloseForm() {\n      this.showAppointmentForm = false;\n    }\n\n  // ----------- DAY CHANGE -------------//\n  dateChanged(event: any) {\n    console.log(\"Date changed\", event);\n  }\n\n  // ----------- MONTH CHANGE -------------//\n  ngAfterViewInit() {\n    const monthPrevBtn = document.querySelectorAll(\n      '.mat-calendar-previous-button'\n    );\n    const monthNextBtn = document.querySelectorAll('.mat-calendar-next-button');\n\n    if (monthPrevBtn) {\n      Array.from(monthPrevBtn).forEach((button) => {\n        this.renderer.listen(button, 'click', (event: any) => {\n        });\n      });\n    }\n\n    if (monthNextBtn) {\n      Array.from(monthNextBtn).forEach((button) => {\n        this.renderer.listen(button, 'click', (event: any) => {\n        });\n      });\n    }\n  }\n\n  handleMonthSelected(event: any) {\n    console.log(\"Month changed\", event);\n  }\n\n  // ---------YEAR CHANGE ----------//\n\n  handleYearSelected(event: any) {\n    console.log(\"Year changed\", event);\n}\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAqC,eAAe;AAY/D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,eAAiC,EAASC,aAA4B,EAAUC,mBAAwC;IAAxH,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,aAAa,GAAbA,aAAa;IAAyB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAHvH,KAAAC,YAAY,GAAS,IAAIC,IAAI,EAAE;IAO7B;IACA,KAAAC,mBAAmB,GAAG,IAAI,CAACH,mBAAmB,CAACG,mBAAmB;IAElE,KAAAC,eAAe,GAAkB,IAAI;IACrC,KAAAC,mBAAmB,GAAuB,IAAI;IAP9C,IAAI,CAACC,QAAQ,GAAGR,eAAe,CAACS,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;EAC5D;EASEC,gBAAgBA,CAACC,WAAwB;IACvC,IAAI,CAACA,WAAW,CAACC,KAAK,EAAE;MACtBD,WAAW,CAACC,KAAK,GAAG,eAAe;;IAErC,IAAI,IAAI,CAACN,eAAe,EAAE;MACxBK,WAAW,CAACE,IAAI,GAAG,IAAI,CAACP,eAAe;MACvC,IAAI,CAACC,mBAAmB,GAAGI,WAAW;;IAExC,IAAI,CAACN,mBAAmB,GAAG,KAAK;EAClC;EAEAS,WAAWA,CAAA;IACT,IAAI,CAACT,mBAAmB,GAAG,KAAK;EAClC;EAEF;EACAU,WAAWA,CAACC,KAAU;IACpBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAAC;EACpC;EAEA;EACAG,eAAeA,CAAA;IACb,MAAMC,YAAY,GAAGC,QAAQ,CAACC,gBAAgB,CAC5C,+BAA+B,CAChC;IACD,MAAMC,YAAY,GAAGF,QAAQ,CAACC,gBAAgB,CAAC,2BAA2B,CAAC;IAE3E,IAAIF,YAAY,EAAE;MAChBI,KAAK,CAACC,IAAI,CAACL,YAAY,CAAC,CAACM,OAAO,CAAEC,MAAM,IAAI;QAC1C,IAAI,CAACnB,QAAQ,CAACoB,MAAM,CAACD,MAAM,EAAE,OAAO,EAAGX,KAAU,IAAI,CACrD,CAAC,CAAC;MACJ,CAAC,CAAC;;IAGJ,IAAIO,YAAY,EAAE;MAChBC,KAAK,CAACC,IAAI,CAACF,YAAY,CAAC,CAACG,OAAO,CAAEC,MAAM,IAAI;QAC1C,IAAI,CAACnB,QAAQ,CAACoB,MAAM,CAACD,MAAM,EAAE,OAAO,EAAGX,KAAU,IAAI,CACrD,CAAC,CAAC;MACJ,CAAC,CAAC;;EAEN;EAEAa,mBAAmBA,CAACb,KAAU;IAC5BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,KAAK,CAAC;EACrC;EAEA;EAEAc,kBAAkBA,CAACd,KAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAAC;EACtC;CAIC;AAtEYlB,iBAAiB,GAAAiC,UAAA,EAN7BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EAEWpC,iBAAiB,CAsE7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}