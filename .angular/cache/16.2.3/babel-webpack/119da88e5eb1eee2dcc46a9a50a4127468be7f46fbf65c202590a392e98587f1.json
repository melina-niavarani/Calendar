{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MonthViewCalenderComponent = class MonthViewCalenderComponent {\n  constructor(sharedService, appointmentsService) {\n    this.sharedService = sharedService;\n    this.appointmentsService = appointmentsService;\n    this.daysOfWeek = this.sharedService.daysOfWeek;\n    this.weeks = this.sharedService.weeks;\n    // === Appointment form condition === //\n    this.showAppointmentForm = this.appointmentsService.showAppointmentForm;\n    this.selectedDate = null;\n    this.selectedAppointment = null;\n  }\n  openAppointmentForm(day) {\n    this.selectedDate = day;\n    this.selectedAppointment = {\n      title: '',\n      date: this.selectedDate || '',\n      startTime: new Date(),\n      endTime: new Date()\n    };\n    this.showAppointmentForm = true;\n  }\n  onAddAppointment(appointment) {\n    if (!appointment.title) {\n      appointment.title = 'Unknown Title';\n    }\n    if (this.selectedDate) {\n      appointment.date = this.selectedDate;\n      this.selectedAppointment = appointment;\n    }\n    this.showAppointmentForm = false;\n  }\n  onDeleteAppointment() {\n    if (this.selectedAppointment) {\n      if (this.selectedAppointment.date) {\n        const selectedAppointmentTimestamp = new Date(this.selectedAppointment.date).getTime();\n        const index = this.appointmentsService.appointments.findIndex(appointment => {\n          if (appointment.date) {\n            const appointmentTimestamp = new Date(appointment.date).getTime();\n            return appointmentTimestamp === selectedAppointmentTimestamp && appointment.startTime === this.selectedAppointment?.startTime && appointment.endTime === this.selectedAppointment?.endTime;\n          }\n          return false;\n        });\n        if (index !== -1) {\n          this.appointmentsService.appointments.splice(index, 1);\n        }\n      }\n      this.selectedAppointment = null;\n    }\n  }\n  onCloseForm() {\n    this.showAppointmentForm = false;\n  }\n  // === Drag & Drop === //\n  // setSelectedDay(day: string) {\n  //   this.selectedDate = day;\n  // }\n  onDragStarted(event, appointment) {\n    this.selectedAppointment = appointment;\n  }\n  onDrop(event) {\n    const newDate = event.container.data[event.currentIndex];\n    if (this.selectedAppointment) {\n      this.selectedAppointment.date = newDate;\n      this.selectedAppointment = null;\n    }\n  }\n};\nMonthViewCalenderComponent = __decorate([Component({\n  selector: 'month-view-calender',\n  templateUrl: './month-view-calender.component.html',\n  styleUrls: ['./month-view-calender.component.css']\n})], MonthViewCalenderComponent);","map":{"version":3,"names":["Component","MonthViewCalenderComponent","constructor","sharedService","appointmentsService","daysOfWeek","weeks","showAppointmentForm","selectedDate","selectedAppointment","openAppointmentForm","day","title","date","startTime","Date","endTime","onAddAppointment","appointment","onDeleteAppointment","selectedAppointmentTimestamp","getTime","index","appointments","findIndex","appointmentTimestamp","splice","onCloseForm","onDragStarted","event","onDrop","newDate","container","data","currentIndex","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/Melina_1/Documents/GitHub/Calendar/src/app/month-view-calender/month-view-calender.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CdkDragDrop, CdkDragStart, CdkDragEnd } from '@angular/cdk/drag-drop';\nimport { SharedService } from '../shared.service';\nimport { AppointmentsService } from '../appointment.service';\nimport { Appointment  } from \"../appointment.model\";\n\n\n@Component({\n  selector: 'month-view-calender',\n  templateUrl: './month-view-calender.component.html',\n  styleUrls: ['./month-view-calender.component.css']\n})\n\nexport class  MonthViewCalenderComponent {\n  [x: string]: any; \n\n  constructor(\n    public sharedService: SharedService, \n    private appointmentsService: AppointmentsService\n  ) {};\n\n  daysOfWeek = this.sharedService.daysOfWeek;\n  weeks = this.sharedService.weeks\n\n  // === Appointment form condition === //\n\n  showAppointmentForm = this.appointmentsService.showAppointmentForm;\n  openAppointmentForm(day: string) {\n    this.selectedDate = day;\n    this.selectedAppointment = {\n      title: '',\n      date: this.selectedDate || '',\n      startTime: new Date(),\n      endTime: new Date(),\n    };\n    this.showAppointmentForm = true;\n  }\n\n  selectedDate: string | null = null;\n  selectedAppointment: Appointment | null = null;\n  \n\n  onAddAppointment(appointment: Appointment) {\n    if (!appointment.title) {\n      appointment.title = 'Unknown Title'; \n    }\n    if (this.selectedDate) {\n      appointment.date = this.selectedDate;\n      this.selectedAppointment = appointment;\n    }\n    this.showAppointmentForm = false;\n  }\n  onDeleteAppointment() {\n    if (this.selectedAppointment) {\n      if (this.selectedAppointment.date) { \n        const selectedAppointmentTimestamp = new Date(this.selectedAppointment.date).getTime();\n  \n        const index = this.appointmentsService.appointments.findIndex(\n          (appointment) => {\n            if (appointment.date) {\n              const appointmentTimestamp = new Date(appointment.date).getTime();\n              return appointmentTimestamp === selectedAppointmentTimestamp &&\n                appointment.startTime === this.selectedAppointment?.startTime && \n                appointment.endTime === this.selectedAppointment?.endTime; \n            }\n            return false; \n          }\n        );\n  \n        if (index !== -1) {\n          this.appointmentsService.appointments.splice(index, 1);\n        }\n      }\n  \n      this.selectedAppointment = null;\n    }\n  }\n\n  onCloseForm() {\n    this.showAppointmentForm = false;\n  }\n\n  // === Drag & Drop === //\n  // setSelectedDay(day: string) {\n  //   this.selectedDate = day;\n  // }\n\n  onDragStarted(event: CdkDragStart, appointment: Appointment) {\n    this.selectedAppointment = appointment;\n  }\n\n  onDrop(event: CdkDragDrop<string[]> ) {\n    const newDate = event.container.data[event.currentIndex];\n    \n    if (this.selectedAppointment) {\n      this.selectedAppointment.date = newDate;\n      this.selectedAppointment = null;\n    }\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}